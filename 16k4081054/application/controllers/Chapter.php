<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Chapter extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Chapter_model');
    } 

    /*
     * Listing of chapter
     */
    function index()
    {
        $data['chapter'] = $this->Chapter_model->get_all_chapter();
        
        $data['_view'] = 'chapter/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new chapter
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Name','Name','max_length[255]');
		$this->form_validation->set_rules('Description','Description','max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'isDelete' => $this->input->post('isDelete'),
				'ID_Course' => $this->input->post('ID_Course'),
				'Status' => $this->input->post('Status'),
				'Name' => $this->input->post('Name'),
				'Description' => $this->input->post('Description'),
				'DateStart' => $this->input->post('DateStart'),
				'Postion' => $this->input->post('Postion'),
            );
            
            $chapter_id = $this->Chapter_model->add_chapter($params);
            redirect('chapter/index');
        }
        else
        {
			$this->load->model('Course_model');
			$data['all_course'] = $this->Course_model->get_all_course();
            
            $data['_view'] = 'chapter/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a chapter
     */
    function edit($ID)
    {   
        // check if the chapter exists before trying to edit it
        $data['chapter'] = $this->Chapter_model->get_chapter($ID);
        
        if(isset($data['chapter']['ID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Name','Name','max_length[255]');
			$this->form_validation->set_rules('Description','Description','max_length[255]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'isDelete' => $this->input->post('isDelete'),
					'ID_Course' => $this->input->post('ID_Course'),
					'Status' => $this->input->post('Status'),
					'Name' => $this->input->post('Name'),
					'Description' => $this->input->post('Description'),
					'DateStart' => $this->input->post('DateStart'),
					'Postion' => $this->input->post('Postion'),
                );

                $this->Chapter_model->update_chapter($ID,$params);            
                redirect('chapter/index');
            }
            else
            {
				$this->load->model('Course_model');
				$data['all_course'] = $this->Course_model->get_all_course();

                $data['_view'] = 'chapter/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The chapter you are trying to edit does not exist.');
    } 

    /*
     * Deleting chapter
     */
    function remove($ID)
    {
        $chapter = $this->Chapter_model->get_chapter($ID);

        // check if the chapter exists before trying to delete it
        if(isset($chapter['ID']))
        {
            $this->Chapter_model->delete_chapter($ID);
            redirect('chapter/index');
        }
        else
            show_error('The chapter you are trying to delete does not exist.');
    }
    
}
